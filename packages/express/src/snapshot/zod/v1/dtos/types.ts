/**
 * This code was generated by @basketry/typescript-dtos@0.1.0
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 *
 * To make changes to the contents of this file:
 * 1. Edit source/path.ext
 * 2. Run the Basketry CLI
 *
 * About Basketry: https://basketry.io
 * About @basketry/typescript-dtos: https://basketry.io/docs/components/@basketry/typescript-dtos
 */

import type * as types from '../types';

/** The over-the-wire representation of the {@link types.AllMaps|AllMaps} type. */
export type AllMapsDto = {
  complexKeyMapA: ComplexKeyMapADto;
  mixedMapA: MixedMapADto;
  mixedMapB: MixedMapBDto;
  mixedMapC: MixedMapCDto;
  mixedMapD: MixedMapDDto;
  pureMapA: PureMapADto;
  pureMapB: PureMapBDto;
  pureMapC: PureMapCDto;
  pureMapD: PureMapDDto;
};

/** The over-the-wire representation of the {@link types.ComplexKeyMapA|ComplexKeyMapA} type. */
export type ComplexKeyMapADto = Record<string, string>;

/** The over-the-wire representation of the {@link types.CreateWidgetBody|CreateWidgetBody} type. */
export type CreateWidgetBodyDto = {
  name: string;
};

/** The over-the-wire representation of the {@link types.ExampleMapValue|ExampleMapValue} type. */
export type ExampleMapValueDto = {
  bar?: string;
  'created-at': string;
  foo?: string;
};

/** The over-the-wire representation of the {@link types.ExhaustiveParamsBody|ExhaustiveParamsBody} type. */
export type ExhaustiveParamsBodyDto = {
  bar?: string;
  foo?: string;
};

/** The over-the-wire representation of the {@link types.Gizmo|Gizmo} type. */
export type GizmoDto = {
  id?: string;
  name?: string;
  size?: types.ProductSize;
} & Record<string, GizmoMapValueDto | string | types.ProductSize | undefined>;

/** The over-the-wire representation of the {@link types.GizmoMapValue|GizmoMapValue} type. */
export type GizmoMapValueDto = {
  bar: string;
  foo: string;
};

/** The over-the-wire representation of the {@link types.GizmosResponse|GizmosResponse} type. */
export type GizmosResponseDto = {
  data: GizmoDto[];
};

/** The over-the-wire representation of the {@link types.MixedMapA|MixedMapA} type. */
export type MixedMapADto = {
  'obj-id': string;
  'obj-name'?: string;
} & Record<string, ExampleMapValueDto | string | undefined>;

/** The over-the-wire representation of the {@link types.MixedMapB|MixedMapB} type. */
export type MixedMapBDto = {
  'obj-id': string;
  'obj-name'?: string;
  'obj-fizz': ExampleMapValueDto;
  'obj-buzz': ExampleMapValueDto;
} & Record<string, ExampleMapValueDto | string | undefined>;

/** The over-the-wire representation of the {@link types.MixedMapC|MixedMapC} type. */
export type MixedMapCDto = {
  'obj-id': string;
  'obj-name'?: string;
  'obj-fizz': ExampleMapValueDto;
  'obj-buzz': ExampleMapValueDto;
} & Record<string, ExampleMapValueDto | string | undefined>;

/** The over-the-wire representation of the {@link types.MixedMapD|MixedMapD} type. */
export type MixedMapDDto = {
  'obj-id': string;
  'obj-name'?: string;
  'obj-fizz': ExampleMapValueDto;
  'obj-buzz': ExampleMapValueDto;
};

/** The over-the-wire representation of the {@link types.PureMapA|PureMapA} type. */
export type PureMapADto = Record<string, ExampleMapValueDto>;

/** The over-the-wire representation of the {@link types.PureMapB|PureMapB} type. */
export type PureMapBDto = {
  'obj-fizz': ExampleMapValueDto;
  'obj-buzz': ExampleMapValueDto;
} & Record<string, ExampleMapValueDto>;

/** The over-the-wire representation of the {@link types.PureMapC|PureMapC} type. */
export type PureMapCDto = {
  'obj-fizz': ExampleMapValueDto;
  'obj-buzz': ExampleMapValueDto;
} & Record<string, ExampleMapValueDto>;

/** The over-the-wire representation of the {@link types.PureMapD|PureMapD} type. */
export type PureMapDDto = {
  'obj-fizz': ExampleMapValueDto;
  'obj-buzz': ExampleMapValueDto;
};

/** The over-the-wire representation of the {@link types.Widget|Widget} type. */
export type WidgetDto = {
  buzz?: number;
  data: WidgetDataDto;
  fiz: number;
  fizbuzz?: number;
  foo?: WidgetFooDto;
  id: string;
  name?: string;
  size?: types.ProductSize;
};

/** The over-the-wire representation of the {@link types.WidgetData|WidgetData} type. */
export type WidgetDataDto = {
  fizz: GizmoMapValueDto;
  buzz: GizmoMapValueDto;
} & Record<string, GizmoMapValueDto>;

/** The over-the-wire representation of the {@link types.WidgetFoo|WidgetFoo} type. */
export type WidgetFooDto = {
  buzz: number;
  fiz?: number;
};
